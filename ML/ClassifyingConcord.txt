Classifying Concord
12-Jul-2024

https://medium.com/@ranton256/classifying-concord-5c68c691f343
https://github.com/ranton256/classifying_concord


The Evolution of Machine Learning Classification

Text Preprocessing
Text Segmentation
Dataset Creation

Text Representation Techniques
Visualization with Word Clouds

Text Preprocessing for ML
spaCy
remove stopwords and perform lemmatization
which reduces words to their base forms

TF-IDF Vectorization
traditional ML models convert text to numerical features using
TF-IDF						vectorization
Term Frequency-Inverse Document Frequency	vectorization

TF-IDF
converts text into numerical vectors by calculating two components for each word:
Term Frequency			how frequently each word appears in a specific document
Inverse Document Frequency	how unique each word is across all documents


Traditional ML Classification Models
Logistic Regression		simple but effective classifier
Random Forest			creates an ensumble of decision trees
Support Vector Machine		radial basis function kernel


Deep Learning and Transformer Models
Feature Extraction
Fine Tuning


References
Performance Metrics: Confusion matrix, Precision, Recall, and F1 Score
https://towardsdatascience.com/performance-metrics-confusion-matrix-precision-recall-and-f1-score-a8fe076a2262


SUMMARY
performance progression from traditional to transformer-based models
reflects broader developments in natural language processing

TF-IDF vectorization with classic algorithms provided a functional baseline
while transformer models improved on these results by capturing contextural relationships
between words

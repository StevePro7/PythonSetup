Try-else Clauses
The third slightly oddball place we can use else blocks is as part of the try except exception handling structure. In this case, the else clause is executed if no exception is raised. Looking at this, we might wonder why we don't just call do_something_else on the line after do_something, like this. The down side of this approach is that we now have no way of telling in the except block whether it was do_something or do_something_else, which raised the exception. The enlarged scope of the try block also obscures our intent with catching the exception. Where were we expecting the exception to come from? Although rarely seen in the wild, it is quite useful, particularly when you have a series of operations which may raise the same exception type, but where you only want to handle exceptions from the first such operation. In this example, both opening the file and iterating over the file can raise an OS error, but we're only interested in handling the exception from the call to open. Note that it's possible to have an else clause and a finally clause. The else block will only be executed if there was no exception, whereas the finally clause will always be executed.

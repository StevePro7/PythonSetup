Byte-wise Operations with Integers
We can also retrieve a byte oriented representation directly as a bytes object using the 2 bytes method. Note we are required to pass the length parameter to specify how many bytes we want in the result, and the byte order parameter to specify whether we want the bytes returned in big endian order with the most significant byte first or little endian order with the least significant byte first. If you want to use the native bytes order for your machine you can retrieve the sys. byteorder value. Our machine is little endian. Given some bytes, we can also turn them back into an integer using the complimentary class method from bytes, which accepts a bytes object and a byteorder string, and we can convert the result back into the hex we started with using the hex built-in function. Asking for the byte oriented representation of an integer using to_bytes will fail for negative integers with an OverflowError; however, if we set the optional signed argument to true, rather than its default value of false, we can get a Two's Complement representation back. This indicates another way to answer the question that started this quest by indexing into the result bytes object to retrieve the least significant byte, and converting that to a binary representation, although concise, this is not.

Calling Descriptors on Classes
One aspect of the descriptor protocol we haven't yet addressed is what happens when we retrieve a descriptor from a class. As we've seen, instance attribute retrieval works fine; however, class attribute retrieval does not. In such cases, the instance argument of dunder get will be set to none, which causes a failure with the WeakKeyDictionary used for attribute storage because we cannot create a weak reference to none. We can use this fact to detect when a descriptor value is being retrieved via a class attribute by testing the instance argument against none. In the dunder get implementation, when instance is none we do what seems most natural, and we turn the descriptor object itself rather than performing the attribute lookup. With the revised code we see more helpful behavior. If you need to query or manipulate the class which contains the descriptor object you can get hold of this through the owner argument of the dunder get method, which in this case, will contain a reference to the Planet class. In many cases, though, you won't need to use Owner, so you can do what we've done and just ignore it.

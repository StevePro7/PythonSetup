Summary
We've covered a crucial topic in this short course module, the distinction between the allocation and initialization of instances. We showed how the static method, dunder new, is called to allocate and return a new instance. It is implicitly a static method, which accepts the class of the new instance as its first argument, and doesn't require either the class method or static method decorators. Ultimately, object. dunder new allocates all instances. One use for overloading dunder new is to support instance interning, which can be useful when certain values of immutable value types are very common or when the domain of values is small and finite, such as with the squares of a chess board. This isn't the whole story though, and Python offers yet more control over instance creation at the class level, although before we get to that we need to understand meta classes. Thanks for watching, and we'll see you in the next module.

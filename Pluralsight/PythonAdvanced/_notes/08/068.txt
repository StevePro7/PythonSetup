Declaring Abstract Methods
Finally, we reach the aspect of Python's abstract base classes, which most immediately springs to mind when we talk about abstract base classes in general, the ability to declare abstract methods. An abstract method is a method which is declared, but which doesn't necessarily have a useful definition. Abstract methods must be overridden in derived concrete classes, and the presence of an abstract method will prevent its host class being instantiated. Abstract methods should be decorated with the abstractmethod decorator, and their abstractness will only be enforced if the metaclass of the host class is ABCMeta. Let's add abstract methods to our Sword abstract base class. First, we need to import abstractmethod from the ABC module. Python syntax requires that we provide a body for each method, so for swipe and parry we raise a NotImplemented error, but for thrust we provide a default behavior of printing, thrusting. We'll take this opportunity to remind you of the distinction between NotImplemented and NotImplementedError. NotImplemented is a value returnable from predicate functions, which are unable to make a determination of true or false. On the other hand, NotImplementedError is an exception type to be raised in place of missing code. We'll also update dunder subclasshook to match. If we now make BroadSword a real subclass of Sword by explicitly adding Sword to the list of base classes we cannot instantiate BroadSword, as it is still too abstract. We get a TypeError, Can't instantiate abstract class BroadSword with abstract methods, parry and thrust. We must implement all abstract methods for the class to be considered concrete. Notice that in thrust we call the implementation provided in the abstract class using super. Now we can successfully instantiate BroadSword and call its methods. Note, however, that the requirement to implement abstract methods doesn't extend to virtual subclasses, only to real subclasses. We can still instantiate SamuraiSword successfully, even though it doesn't implement all of the abstract methods.

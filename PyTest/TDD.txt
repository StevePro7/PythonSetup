TDD
18-Jun-2025

Complete Python Development Guide
https://testdriven.io/guides/complete-python

Reference:
~\GitHub\StevePro7\PythonSetup\Pydantic


Step02
https://testdriven.io/blog/testing-python

monkeypatch
fixture to replace calls with lambda callback that returns MockedResponse


MOCKING
pytest		monkeypatch
pytest-mock
unittest.mock


Mutation testing
analyze effectiveness or robustness of your test suite
mutmut


Hypothesis
library = property-based testing in Python
generates a wide range of random test data that's dependent on previous tests runs


Type Checking
runtime type checkers like
pydantic [or Typeguard] minimize number of tests


Step03	TDD
https://testdriven.io/blog/modern-tdd

conftest
store pytest fixtures

fixtures define steps and data that constitute teh arrange phase

EG
@pytest.fixture
def some_fixture():
  # do something before test
  yield
  # do something after  test

autouse=True
fixture automatically used by default before and after each test in the suite

pydantic
do not need tests to validate data

Flask API
jsonschema
validate JSON payloads against the defined schemas and Flask


Step04	Linters
Pyflakes
pycodestyle

Flake8	wrapper around Pyflakes, pycodestyle and McCabe

PEP-8
pep8-naming

iSort	sort imports
python -m isort .

Ruff
replace Flake8 and isort

Reference:
ruff.txt
~\GitHub\StevePro7\Blogger\Python\ThirdParty

Safety
tool keeping code free from security issues

GitHub Actions


Step05	type hints
static	mypy

Runtime
pydantic	validator
marshmallow	serialization	de-serialization library
typeguard

VAR.__annotations__

Type hints
enable static type checking tools

Type annotations
syntax to annotate function inputs, outputs, variables

requirements.txt
flask==2.3.2

requirements-dev.txt
-r requirements.txt
mypy==1.9.0

Pydantic
validation_error
must be a class method since validation happens before the instance is created

Marshmallow
reference:
~\GitHub\StevePro7\PythonSetup\Flask\MarshMallowSchema
model
schema

Remember to de-serialize data into an object you need decorator
@post_load

Typeguard
enforces type checks at runtime
whereas
mypy
enforces static type checks


Step06	docstrings
function.__doc__

darglint
document linter

doctest
Testing thru documentation

Sphinx
present docs to users
generate docs from docstrings

Open API docs
Swagger UI
editor.swagger.io

autodoc
pull in documentation from docstrings


Step07
__all__
attriube in __init__.py = list of public objects for the module

Packages
PyPi
~\GitHub\StevePro7\PythonSetup\Medium\Miscelleanous\PythonPackages
https://pypi.org/project/stevepromlpredictor/0.1.0
Study18 DevOps
09-Jan-2023



Challenges of Terraform
- state management	store state somewhere across multiple teams
- remote execution	GitOps approach using Git and Pull Requests
- policy decisions	want to programmatically declare policies as code

IaC
manages large-scale, distributed systems, cloud-native apps + service-based architectures
 
Why IaC important?
IaC provides ability to standardize infrastructure across different environments

automate infrastructure deployments 
reduces risk of errors / inconsistencies that arise from manual configuration + provisioning


Terraform
IaC tool created by HashiCorp
Provides the ability to deploy resources to multiple cloud providers


AWS CloudFormation
AWS service design for provisioning AWS resources



Pulumi
Pulumi is IaC platform that allows you to use familiar programming languages and
tools to build, deploy, and manage cloud infrastructure


Terraform vs. AWS CloudFormation
https://spacelift.io/blog/terraform-vs-cloudformation


OPA
Open Policy Agent
https://www.openpolicyagent.org/docs/latest
Open source general purpose policy engine that unifies policy enforcement across the stack

Use REGO high-level declarative language that lets you specify policy as code and
simple APIs to offload policy decision-making



Datadog
Observability + monitoring platform for infrastructure and applications


GitOps
Git-centric framework that simplifies application deployment in cloud-native environments
//automates the provisioning of infrastructure e.g. modern cloud infrastructure

MLOps
automates and simplifies Machine Learning workflows and deployments

LLMOps
allows for the efficient deployment, monitoring and maintenance of Large Language Models


GraphQL
Instead of structuring an API around resources and methods... [like REST]

GraphQL forces us to think about our data as a network of interconnected objects
[graph]